# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u819y_YQ7TvRBhN0ta4kZSeKNSqHDSnp
"""

#Code by K.A. Raja Babu
#May 6, 2021
#Drawing a right angled triangle PQR

import numpy as np
import matplotlib.pyplot as plt
from coeffs import * #refered from G.V.V sir's code


#Sides
QR = 8
PR = 10

#Calculating third side 
PQ=((PR*PR)-(QR*QR))**(0.5)

#Triangle vertices
P = np.array([0,PQ]) 
Q = np.array([0,0]) 
R = np.array([QR,0]) 


#Generating all lines
x_PQ = line_gen(P,Q)
x_QR = line_gen(Q,R)
x_RP = line_gen(R,P)

#Plotting all lines
plt.plot(x_PQ[0,:],x_PQ[1,:],label='$PQ$')
plt.plot(x_QR[0,:],x_QR[1,:],label='$QR$')
plt.plot(x_RP[0,:],x_RP[1,:],label='$RP$')

plt.plot(P[0], P[1], 'o')
plt.text(P[0] * (1 + 0.1), P[1] * (1 - 0.1) , 'P')
plt.plot(Q[0], Q[1], 'o')
plt.text(Q[0] * (1 - 0.2), Q[1] * (1) , 'Q')
plt.plot(R[0], R[1], 'o')
plt.text(R[0] * (1 + 0.03), R[1] * (1 - 0.1) , 'R')

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor