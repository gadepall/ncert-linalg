# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tRVDA_5robyorI80FDBBgs7OTDogxGdX
"""

import numpy as np
import matplotlib.pyplot as plt
#from coeffs import *

import math
#from coeffs import *
import subprocess
import shlex

def line_gen(A,B):
  len =10
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB


omat = np.array([[0,1],[-1,0]])

#side 
QR= 4.7
#Angle
M=30/180 *math.pi
N =60/180 *math.pi
#third angle of the triangle is 180-(30+60) =90 . Therefore the required triangle is right angled. 
q=4.7 * math.cos(M)
r =4.7* math.cos(N)

#Triangle vertices
Q = np.array([0,q]) 
P = np.array([0,0]) 
R = np.array([r,0]) 


#Generating all lines
x_PQ = line_gen(P,Q)
x_QR = line_gen(Q,R)
x_RP = line_gen(R,P)

#Plotting all lines
plt.plot(x_PQ[0,:],x_PQ[1,:],label='$PQ$')
plt.plot(x_QR[0,:],x_QR[1,:],label='$QR$')
plt.plot(x_RP[0,:],x_RP[1,:],label='$RP$')

plt.plot(Q[0], Q[1], 'o')
plt.text(Q[0] * (1 + 0.1), Q[1] * (1 - 0.1) , 'Q')
plt.plot(P[0], P[1], 'o')
plt.text(P[0] * (1 - 0.2), P[1] * (1) , 'P')
plt.plot(R[0], R[1], 'o')
plt.text(R[0] * (1 + 0.03), R[1] * (1 - 0.1) , 'R')

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')

#Saving figures
#if using termux
plt.savefig('triangle1.pdf')
#else
plt.show()

#plt.show()

from google.colab import drive
drive.mount('/content/drive')

