# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QUQCAsL8v6eD51qWYHsLsL6jkUYDVXWc
"""

#importing modules required
import numpy as np
from numpy import linalg
import matplotlib.pyplot as plt

# given equations: (8 5)x = 9 , (3 2)x = 4
a= np.array([[8,5]])
b= np.array([[3,2]])
c= np.array([9,4])
A = np.concatenate((a,b))
# Solving the linear equation
soln= np.linalg.solve(A,c)
print("The solution for the given equations is:",soln)

# generating the points lying on the given points
# generating the 50 of x-points between -10 to 10
x1 = np.linspace(-10,10,50)
x2 = np.linspace(-10,10,50)   
# from frst equation (8 5)(x1 y1)= 9 generating y1 points 
y1 = ((c[0])-((a[0][0])*(x1)))/a[0][1] 
# from second equation (3 2)(x2 y2)= 4 generating y2 points 
y2 = ((c[1])-((b[0][0])*(x2)))/b[0][1]

#Plotting:
plt.style.use("seaborn-whitegrid")
plt.plot(x1,y1,label="line 1: (8 5)x = 9")
plt.plot(x2,y2,label="line 2: (3 2)x = 4")
# Plotting the soln point which is the intersection point
plt.scatter(soln[0],soln[1], color="black", label='intersection point: (-2,5)')
plt.legend()
plt.show()
plt.savefig('plot.png')

