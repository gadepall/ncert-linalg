# -*- coding: utf-8 -*-
"""Assignment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xo-yFjXNjsimEZvoHw1f95-P7G3MbT0m
"""

import math
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

pointa = np.array([24/29,36/29,48/29])
normala = np.array([2,3,4])
pointb = np.array([0,0,0])
normalb = np.array([3,4,-6])
pointc = np.array([1/3,1/3,1/3])
normalc = np.array([1,1,1])
pointd = np.array([0,-8/5,0])
normald = np.array([0,-5,0])

#Plane is shown as ax+by+cz+d = 0, where a,b,c are normal vectors.
#To calculate distance of plane from origin
da = -pointa.dot(normala)
db = -pointb.dot(normalb)
dc = -pointc.dot(normalc)
dd = -pointd.dot(normald)

# create x,z
xx, zz = np.meshgrid(range(10), range(10))

# calculate corresponding y
ya = (-normala[0] * xx - normala[2] * zz - da) * 1. /normala[1]
yb = (-normalb[0] * xx - normalb[2] * zz - db) * 1. /normalb[1]
yc = (-normalc[0] * xx - normalc[2] * zz - dc) * 1. /normalc[1]
yd = (-normald[0] * xx - normald[2] * zz - dd) * 1. /normald[1]

ax = plt.figure(figsize=(10,10)).gca(projection='3d')
ax.set_xlabel('X axis')
ax.set_ylabel('Y axis')
ax.set_zlabel('Z axis')

# plot the surface
ax.plot_surface(xx,ya,zz,alpha=0.6)
#plot the point
ax.plot([pointa[0]], [pointa[1]], [pointa[2]], color='red',marker='H')
#plot the perpendicular
ax.quiver([0], [0], [0], [normala[0]], [normala[1]], [normala[2]], linewidths = (1,), edgecolor="green")

plt.show()

ax = plt.figure(figsize=(10,10)).gca(projection='3d')
ax.set_xlabel('X axis')
ax.set_ylabel('Y axis')
ax.set_zlabel('Z axis')

# plot the surface
ax.plot_surface(xx,yb,zz,alpha=0.6)
#plot point
ax.plot([pointb[0]], [pointb[1]], [pointb[2]],color='red', marker='H')
#plot the perpendicular
ax.quiver([0], [0], [0], [normalb[0]], [normalb[1]], [normalb[2]], linewidths = (1,), edgecolor="green")

plt.show()

ax = plt.figure(figsize=(10,10)).gca(projection='3d')
ax.set_xlabel('X axis')
ax.set_ylabel('Y axis')
ax.set_zlabel('Z axis')

# plot the surface
ax.plot_surface(xx,yc,zz,alpha=0.6)
#plot the point
ax.plot([pointc[0]], [pointc[1]], [pointc[2]], color='red', marker='H')
#plot the perpendicular
ax.quiver([0], [0], [0], [normalc[0]], [normalc[1]], [normalc[2]], linewidths = (1,), edgecolor="green")

plt.show()

ax = plt.figure(figsize=(10,10)).gca(projection='3d')
ax.set_xlabel('X axis')
ax.set_ylabel('Y axis')
ax.set_zlabel('Z axis')

# plot the surface
ax.plot_surface(xx,yd,zz,alpha=0.5)
#plot the point
ax.plot([pointd[0]], [pointd[1]], [pointd[2]], color='red', marker='H')
#plot the perpendicular
ax.quiver([0], [0], [0], [normald[0]], [normald[1]], [normald[2]], linewidths = (1,), edgecolor="green")

plt.show()