# -*- coding: utf-8 -*-
"""ChallengeProblem5_5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-7a_JCnuYT7avFhyVw2JvBV8e7AeQVqF
"""

#Code by K.A. Raja Babu
#June 24,2021

def hyper_gen(y):
	x = np.sqrt(1+y**2)
	return x

#Generate line points
def line_gen(A,B):
  len =10
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB

import numpy as np
import matplotlib.pyplot as plt
from numpy import linalg as LA

#setting up plot
fig = plt.figure()
ax = fig.add_subplot(111, aspect='equal')
len = 100
y = np.linspace(-2,2,len)

#hyper parameters
V = 1/2*np.array(([0,1],[1,0]))
u = -3/2*np.array(([0,1]))
f = 2

Vinv = LA.inv(V)
#Eigenvalues and eigenvectors
D_vec,P = LA.eig(V)
D = np.diag(D_vec)

uconst = u.T@Vinv@u-f
a = np.sqrt(np.abs(uconst/D_vec[0]))
b = np.sqrt(np.abs(uconst/D_vec[1]))

#Generating the Standard Hyperbola
x = hyper_gen(y)
xStandardHyperLeft = np.vstack((-x,y))
xStandardHyperRight = np.vstack((x,y))

#Affine Parameters
c = -Vinv@u

R =  np.array(([0,1],[1,0]))
ParamMatrix = np.array(([a,0],[0,b]))

#Generating the actual hyperbola
xActualHyperLeft = P@ParamMatrix@R@xStandardHyperLeft+c[:,np.newaxis]
xActualHyperRight = P@ParamMatrix@R@xStandardHyperRight+c[:,np.newaxis]

#Plotting the actual hyperbola
plt.plot(xActualHyperLeft[0,:],xActualHyperLeft[1,:],label='xy-3y+2=0',color='r')
plt.plot(xActualHyperRight[0,:],xActualHyperRight[1,:],color='r')

#plotting minor axis
R=np.array([-2,-5])
S=np.array([7,4])
RS=line_gen(R,S)
plt.plot(RS[0,:],RS[1,:],'--',label='(1 -1)x=3')

#Plotting major axis
R1=np.array([-2,5])
S1=np.array([8,-5])
RS1=line_gen(R1,S1)
plt.plot(RS1[0,:],RS1[1,:],'--',label='(1 1)x=3')

plt.plot(3,0,'o',color='r')
plt.text(3.6,0.1,'c')

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')

plt.show()