# -*- coding: utf-8 -*-
"""ChallengeProblem5_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dzbw6GkLXNHm98NWEm68c9CYnT1KqTlB
"""

#Code by K.A. Raja Babu
#June 24,2021

import numpy as np
import matplotlib.pyplot as plt
from numpy import linalg as LA

#Generate line points
def line_gen(A,B):
  len =10
  dim = A.shape[0]
  x_AB = np.zeros((dim,len))
  lam_1 = np.linspace(0,1,len)
  for i in range(len):
    temp1 = A + lam_1[i]*(B-A)
    x_AB[:,i]= temp1.T
  return x_AB

def parab_gen(y,a):
    x = y**2/a
    return x

#setting up plot
fig = plt.figure()
ax = fig.add_subplot(111, aspect='equal')
len = 100
y = np.linspace(-4,4,len)

#parab parameters
V = np.array(([0,0],[0,1]))
u = np.array(([-2,1]))
f = 4

O = np.array(([0,0]))

#Eigenvalues and eigenvectors
D_vec,P = LA.eig(V)
D = np.diag(D_vec)
p = P[:,0]
eta = 2*u@p
foc = eta/D_vec[1]

x = parab_gen(y,foc)

cA = np.vstack((u+eta*0.5*p,V))
cb = np.vstack((-f,(eta*0.5*p-u).reshape(-1,1)))
c = LA.lstsq(cA,cb,rcond=None)[0]
c = c.flatten()
P=-P
xStandardparab = np.vstack((x,y))
xActualparab = P@xStandardparab + c[:,np.newaxis]

#Plotting the actual parabola
plt.plot(xActualparab[0,:],xActualparab[1,:],label='$y^2$-4x+2y+4=0',color='r')

#Plotting axis
R=np.array([-1,-1])
S=np.array([9,-1])
RS=line_gen(R,S)
plt.plot(RS[0,:],RS[1,:],'--',label='(0 1)x=-1')

plt.plot(3/4,-1,'o',color='r')
plt.text(0.4,-0.8,'c')


plt.xlabel('$x$')
plt.ylabel('$y$')
plt.legend(loc='best')
plt.grid() # minor
plt.axis('equal')

plt.show()